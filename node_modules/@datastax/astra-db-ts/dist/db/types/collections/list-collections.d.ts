import type { WithTimeout } from '../../../lib';
import { CollectionDefinition, WithKeyspace } from '../../../db';
import { SomeDoc } from '../../../documents';
/**
 * Options for listing collections.
 *
 * @field nameOnly - If true, only the name of the collections is returned. If false, the full collections info is returned. Defaults to true.
 * @field keyspace - Overrides the keyspace to list collections from. If not provided, the default keyspace is used.
 * @field timeout - The timeout override for this method
 *
 * @see Db.listCollections
 *
 * @public
 */
export interface ListCollectionsOptions extends WithTimeout<'collectionAdminTimeoutMs'>, WithKeyspace {
    /**
     * If true, only the name of the collections is returned.
     *
     * If false, the full collections info is returned.
     *
     * Defaults to true.
     *
     * @example
     * ```typescript
     * const names = await db.listCollections({ nameOnly: true });
     * console.log(names); // [{ name: 'my_coll' }]
     *
     * const info = await db.listCollections({ nameOnly: false });
     * console.log(info); // [{ name: 'my_coll', options: { ... } }]
     * ```
     *
     * @defaultValue true
     */
    nameOnly?: boolean;
}
/**
 * Information about a collection, used when `nameOnly` is false in {@link ListCollectionsOptions}.
 *
 * @field name - The name of the collections.
 * @field options - The creation options for the collections.
 *
 * @see ListCollectionsOptions
 * @see Db.listCollections
 *
 * @public
 */
export interface CollectionDescriptor {
    /**
     * The name of the collections.
     */
    name: string;
    /**
     * The creation options for the collections (i.e. the `vector`, `indexing`, and `defaultId` fields).
     */
    definition: CollectionDefinition<SomeDoc>;
}
