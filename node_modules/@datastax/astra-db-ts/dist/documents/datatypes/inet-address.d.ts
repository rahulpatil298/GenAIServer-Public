import { TableCodec, TableSerCtx, TableDesCtx } from '../../documents';
import { $DeserializeForTable, $SerializeForTable } from '../../documents/tables/ser-des/constants';
/**
 * A shorthand function for `new InetAddress(addr, version?)`
 *
 * @public
 */
export declare const inet: (address: string, version?: 4 | 6) => InetAddress;
/**
 * Represents an `inet` column for Data API tables.
 *
 * You may use the {@link inet} function as a shorthand for creating a new `InetAddress`.
 *
 * See the official DataStax documentation for more information.
 *
 * @public
 */
export declare class InetAddress implements TableCodec<typeof InetAddress> {
    #private;
    /**
     * Implementation of `$SerializeForTable` for {@link TableCodec}
     */
    [$SerializeForTable](ctx: TableSerCtx): readonly [0, (string | undefined)?];
    /**
     * Implementation of `$DeserializeForTable` for {@link TableCodec}
     */
    static [$DeserializeForTable](value: any, ctx: TableDesCtx): readonly [0, (InetAddress | undefined)?];
    /**
     * Creates a new `InetAddress` instance from a vector-like value.
     *
     * If you pass a `version`, the value will be validated as an IPv4 or IPv6 address; otherwise, it'll be validated as
     * either, and the version will be inferred from the value.
     *
     * You can set `validate` to `false` to bypass any validation if you're confident the value is a valid inet address.
     *
     * @param address - The address to create the `InetAddress` from
     * @param version - The IP version to validate the address as
     * @param validate - Whether to actually validate the address
     *
     * @throws TypeError If the address is not a valid IPv4 or IPv6 address
     */
    constructor(address: string, version?: 4 | 6 | null, validate?: boolean);
    /**
     * Returns the IP version of the inet address.
     *
     * @returns The IP version of the inet address
     */
    get version(): 4 | 6;
    /**
     * Returns the string representation of the inet address.
     *
     * @returns The string representation of the inet address
     */
    toString(): string;
}
