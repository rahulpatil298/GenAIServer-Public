import { EmbeddingHeadersProvider } from '../../documents/embedding-providers/embedding-headers-provider';
/**
 * An embedding headers provider which translates AWS access keys into the appropriate authentication headers for
 * AWS-based embedding providers (bedrock).
 *
 * Sets the headers `x-embedding-access-id` and `x-embedding-secret-id`.
 *
 * @example
 * ```typescript
 * const provider = new AWSEmbeddingHeadersProvider('access-key-id', 'secret-access-key');
 * const collections = await db.collections('my_coll', { embeddingApiKey: provider });
 * ```
 *
 * @see EmbeddingHeadersProvider
 *
 * @public
 */
export declare class AWSEmbeddingHeadersProvider extends EmbeddingHeadersProvider {
    #private;
    /**
     * Constructs an instead of the {@link TokenProvider}.
     *
     * @param accessKeyId - The access key ID part of the AWS access keys
     * @param secretAccessKey - The secret access key part of the AWS access keys
     */
    constructor(accessKeyId: string, secretAccessKey: string);
    /**
     * Returns the appropriate embedding auth headers.
     *
     * @returns the appropriate embedding auth headers.
     */
    getHeaders(): Record<string, string>;
}
