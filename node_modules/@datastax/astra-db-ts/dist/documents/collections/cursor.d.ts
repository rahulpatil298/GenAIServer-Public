import { Collection, CollectionFilter, FindCursor, type SomeDoc } from '../../documents';
/**
 * A subclass of `FindCursor` which is identical to its parent; it just adds some more specific typing for
 * a couple of properties/functions.
 *
 * See {@link FindCursor} directly for information on the cursor itself.
 *
 * @public
 */
export declare class CollectionFindCursor<T, TRaw extends SomeDoc = SomeDoc> extends FindCursor<T, TRaw> {
    /**
     * The collection which spawned this cursor.
     *
     * @returns The collection which spawned this cursor.
     */
    get dataSource(): Collection;
    /**
     * Sets the filter for the cursor, overwriting any previous filter.
     *
     * *NB. This method does **NOT** mutate the cursor, and may be called even after the cursor is started; it simply
     * returns a new, uninitialized cursor with the given new filter set.*
     *
     * @param filter - A filter to select which records to return.
     *
     * @returns A new cursor with the new filter set.
     */
    filter(filter: CollectionFilter<TRaw>): FindCursor<T, TRaw>;
}
