import type { GenericInsertManyOptions, SomeRow } from '../../../../documents';
/**
 * Options for an `insertMany` command on a table.
 *
 * The parameters depend on the `ordered` option. If `ordered` is `true`, the `parallel` option is not allowed.
 *
 * @field ordered - If `true`, the rows are inserted sequentially; else, they're arbitrary inserted in parallel.
 * @field concurrency - The maximum number of concurrent requests to make at once.
 * @field chunkSize - The number of rows to upload per request. Defaults to 50.
 * @field timeout - The timeout override for this method
 *
 * @see Table.insertMany
 *
 * @public
 */
export type TableInsertManyOptions = GenericInsertManyOptions;
/**
 * Represents the result of an `insertMany` command on a table.
 *
 * @field insertedIds - The primary keys of the inserted rows.
 * @field insertedCount - The number of inserted rows.
 *
 * @see Table.insertMany
 *
 * @public
 */
export interface TableInsertManyResult<PKey extends SomeRow> {
    /**
     * The primary keys of the inserted rows.
     */
    insertedIds: PKey[];
    /**
     * The number of inserted rows (equals `insertedIds.length`).
     */
    insertedCount: number;
}
