"use strict";
// Copyright Datastax, Inc
// SPDX-License-Identifier: Apache-2.0
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseAdminSpawnOpts = void 0;
const validation_1 = require("../../lib/validation");
const lib_1 = require("../../lib");
const logger_1 = require("../../lib/logging/logger");
const timeouts_1 = require("../../lib/api/timeouts");
const parseAdminSpawnOpts = (raw, field) => {
    const opts = validation_1.p.parse('object?')(raw, field);
    if (!opts) {
        return undefined;
    }
    return {
        logging: logger_1.Logger.parseConfig(opts.logging, `${field}.logging`),
        endpointUrl: validation_1.p.parse('string?')(opts.endpointUrl, `${field}.endpointUrl`),
        adminToken: lib_1.TokenProvider.mergeTokens(opts.adminToken),
        additionalHeaders: validation_1.p.parse('object?')(opts.additionalHeaders, `${field}.additionalHeaders`),
        astraEnv: validation_1.p.parse('string?')(opts.astraEnv, `${field}.astraEnv`),
        timeoutDefaults: timeouts_1.Timeouts.parseConfig(opts.timeoutDefaults, `${field}.timeoutDefaults`),
    };
};
exports.parseAdminSpawnOpts = parseAdminSpawnOpts;
