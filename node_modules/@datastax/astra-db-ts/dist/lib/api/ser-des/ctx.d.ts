import { Codecs, CodecSerDesFns } from '../../../lib/api/ser-des/codecs';
import { SomeDoc } from '../../../documents';
import type { RawDataAPIResponse } from '../../../lib';
/**
 * @public
 */
export interface BaseSerCtx<Fns extends CodecSerDesFns> extends BaseSerDesCtx<Fns> {
    mutatingInPlace: boolean;
}
/**
 * @public
 */
export interface BaseDesCtx<Fns extends CodecSerDesFns> extends BaseSerDesCtx<Fns> {
    rawDataApiResp: RawDataAPIResponse;
    parsingInsertedId: boolean;
    keys: string[] | null;
}
/**
 * @public
 */
export interface BaseSerDesCtx<Fns extends CodecSerDesFns> {
    rootObj: SomeDoc;
    path: string[];
    done<T>(obj?: T): readonly [0, T?];
    recurse<T>(obj?: T): readonly [1, T?];
    continue(): readonly [2];
    codecs: Codecs<Fns>;
    customState: Record<string, any>;
    camelSnakeCache?: Record<string, string>;
}
export declare const DONE: 0;
export declare const RECURSE: 1;
export declare const CONTINUE: 2;
/**
 * @internal
 */
export declare function ctxDone<T>(obj?: T): readonly [0, T?];
/**
 * @internal
 */
export declare function ctxRecurse<T>(obj?: T): readonly [1, T?];
/**
 * @internal
 */
export declare function ctxContinue(): readonly [2];
