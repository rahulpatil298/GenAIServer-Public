import { CommandFailedEvent, CommandStartedEvent, CommandSucceededEvent, CommandWarningsEvent } from '../../documents';
import { AdminCommandFailedEvent, AdminCommandPollingEvent, AdminCommandStartedEvent, AdminCommandSucceededEvent, AdminCommandWarningsEvent } from '../../administration/events';
import type { InternalLoggingConfig } from '../../client/types/internal';
import type { NormalizedLoggingConfig } from '../../lib/logging/types';
/**
 * @internal
 */
export declare const LoggingEvents: readonly ["all", "adminCommandStarted", "adminCommandPolling", "adminCommandSucceeded", "adminCommandFailed", "adminCommandWarnings", "commandStarted", "commandFailed", "commandSucceeded", "commandWarnings"];
/**
 * @internal
 */
export declare const LoggingEventsWithoutAll: ("adminCommandStarted" | "adminCommandPolling" | "adminCommandSucceeded" | "adminCommandFailed" | "adminCommandWarnings" | "commandStarted" | "commandSucceeded" | "commandFailed" | "commandWarnings")[];
/**
 * @internal
 */
export declare const LoggingOutputs: readonly ["event", "stdout", "stderr"];
/**
 * @internal
 */
export declare const EventConstructors: {
    readonly commandFailed: typeof CommandFailedEvent;
    readonly commandStarted: typeof CommandStartedEvent;
    readonly commandWarnings: typeof CommandWarningsEvent;
    readonly commandSucceeded: typeof CommandSucceededEvent;
    readonly adminCommandFailed: typeof AdminCommandFailedEvent;
    readonly adminCommandStarted: typeof AdminCommandStartedEvent;
    readonly adminCommandPolling: typeof AdminCommandPollingEvent;
    readonly adminCommandWarnings: typeof AdminCommandWarningsEvent;
    readonly adminCommandSucceeded: typeof AdminCommandSucceededEvent;
};
/**
 * @internal
 */
export declare const EmptyInternalLoggingConfig: InternalLoggingConfig;
/**
 * @internal
 */
export declare const DataAPILoggingDefaultOutputs: {
    readonly adminCommandStarted: readonly ["event", "stdout"];
    readonly adminCommandPolling: readonly ["event", "stdout"];
    readonly adminCommandSucceeded: readonly ["event", "stdout"];
    readonly adminCommandFailed: readonly ["event", "stderr"];
    readonly adminCommandWarnings: readonly ["event", "stderr"];
    readonly commandStarted: readonly ["event"];
    readonly commandFailed: readonly ["event", "stderr"];
    readonly commandSucceeded: readonly ["event"];
    readonly commandWarnings: readonly ["event", "stderr"];
};
/**
 * @public
 */
export declare const DataAPILoggingDefaults: NormalizedLoggingConfig[];
