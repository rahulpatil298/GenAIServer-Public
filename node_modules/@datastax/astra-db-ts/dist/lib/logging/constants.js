"use strict";
// Copyright Datastax, Inc
// SPDX-License-Identifier: Apache-2.0
// noinspection DuplicatedCode
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataAPILoggingDefaults = exports.DataAPILoggingDefaultOutputs = exports.EmptyInternalLoggingConfig = exports.EventConstructors = exports.LoggingOutputs = exports.LoggingEventsWithoutAll = exports.LoggingEvents = void 0;
const validation_1 = require("../../lib/validation");
const documents_1 = require("../../documents");
const events_1 = require("../../administration/events");
const util_1 = require("../../lib/logging/util");
exports.LoggingEvents = ['all', 'adminCommandStarted', 'adminCommandPolling', 'adminCommandSucceeded', 'adminCommandFailed', 'adminCommandWarnings', 'commandStarted', 'commandFailed', 'commandSucceeded', 'commandWarnings'];
exports.LoggingEventsWithoutAll = exports.LoggingEvents.filter((e) => e !== 'all');
void validation_1.EqualityProof;
exports.LoggingOutputs = ['event', 'stdout', 'stderr'];
void validation_1.EqualityProof;
exports.EventConstructors = {
    commandFailed: documents_1.CommandFailedEvent,
    commandStarted: documents_1.CommandStartedEvent,
    commandWarnings: documents_1.CommandWarningsEvent,
    commandSucceeded: documents_1.CommandSucceededEvent,
    adminCommandFailed: events_1.AdminCommandFailedEvent,
    adminCommandStarted: events_1.AdminCommandStartedEvent,
    adminCommandPolling: events_1.AdminCommandPollingEvent,
    adminCommandWarnings: events_1.AdminCommandWarningsEvent,
    adminCommandSucceeded: events_1.AdminCommandSucceededEvent,
};
exports.EmptyInternalLoggingConfig = Object.fromEntries(exports.LoggingEventsWithoutAll.map((e) => [e, (0, util_1.buildOutputsMap)([])]));
exports.DataAPILoggingDefaultOutputs = {
    adminCommandStarted: ['event', 'stdout'],
    adminCommandPolling: ['event', 'stdout'],
    adminCommandSucceeded: ['event', 'stdout'],
    adminCommandFailed: ['event', 'stderr'],
    adminCommandWarnings: ['event', 'stderr'],
    commandStarted: ['event'],
    commandFailed: ['event', 'stderr'],
    commandSucceeded: ['event'],
    commandWarnings: ['event', 'stderr'],
};
exports.DataAPILoggingDefaults = [{
        events: ['adminCommandStarted', 'adminCommandPolling', 'adminCommandSucceeded'],
        emits: ['event', 'stdout'],
    }, {
        events: ['adminCommandFailed', 'commandFailed', 'commandWarnings', 'adminCommandWarnings'],
        emits: ['event', 'stderr'],
    }, {
        events: ['commandStarted', 'commandSucceeded'],
        emits: ['event'],
    }];
