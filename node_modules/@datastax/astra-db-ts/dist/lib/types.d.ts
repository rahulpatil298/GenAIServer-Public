import { DataAPIEnvironments } from '../lib/constants';
/**
 * Shorthand type to represent some nullish value.
 *
 * @public
 */
export type nullish = null | undefined;
/**
 * All the available Data API backends the Typescript client recognizes.
 *
 * If using a non-Astra database as the backend, the `environment` option should be set in the `DataAPIClient` options,
 * as well as in the `db.admin()` options.
 *
 * @public
 */
export type DataAPIEnvironment = typeof DataAPIEnvironments[number];
/**
 * @internal
 */
export type Ref<T> = {
    ref: T;
};
/**
 * Utility type to represent an empty object without eslint complaining.
 *
 * @public
 */
export type EmptyObj = {};
/**
 * Utility type to represent a value that can be either a single value or an array of values.
 *
 * @public
 */
export type OneOrMany<T> = T | readonly T[];
