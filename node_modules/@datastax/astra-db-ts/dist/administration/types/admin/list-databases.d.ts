import { AstraDbCloudProvider, AstraDbStatus } from '../../../administration/types';
import type { WithTimeout } from '../../../lib';
/**
 * Represents all possible statuses of a database that you can filter by.
 *
 * @public
 */
export type AstraDbStatusFilter = AstraDbStatus | 'ALL' | 'NONTERMINATED';
/**
 * Represents all possible cloud providers that you can filter by.
 *
 * @public
 */
export type AstraDbCloudProviderFilter = AstraDbCloudProvider | 'ALL';
/**
 * Represents the options for listing databases.
 *
 * @field include - Allows filtering so that databases in listed states are returned.
 * @field provider - Allows filtering so that databases from a given provider are returned.
 * @field limit - Specify the number of items for one page of data.
 * @field skip - Starting value for retrieving a specific page of results.
 *
 * @public
 */
export interface ListAstraDatabasesOptions extends WithTimeout<'databaseAdminTimeoutMs'> {
    /**
     * Allows filtering so that databases in listed states are returned.
     */
    include?: AstraDbStatusFilter;
    /**
     * Allows filtering so that databases from a given provider are returned.
     */
    provider?: AstraDbCloudProviderFilter;
    /**
     * Optional parameter for pagination purposes. Specify the number of items for one page of data.
     *
     * Should be between 1 and 100.
     *
     * Defaults to 25.
     *
     * @defaultValue 25
     */
    limit?: number;
    /**
     * Optional parameter for pagination purposes. Used as this value for starting retrieving a specific page of results.
     */
    skip?: number;
}
